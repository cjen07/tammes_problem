var width = 960,
    height = 960;

var projection = d3.geo.orthographic()
    .scale(270)
    .translate([width / 2, height / 2])
    .clipAngle(90)
    .precision(.1);

var drag = d3.behavior.drag()
          .origin(function() { var r = projection.rotate(); return {x: r[0], y: -r[1]}; })
          .on("drag", dragged)
          .on("dragstart", dragstarted)
          .on("dragend", dragended);

var path = d3.geo.path()
    .projection(projection);

var graticule = d3.geo.graticule();

var svg = d3.select("#globe").append("svg")
    .attr("width", width)
    .attr("height", height)
    .call(drag);

var pathG = svg.append("g");

pathG.append("defs").append("path")
    .datum({type: "Sphere"})
    .attr("id", "sphere")
    .attr("d", path);

pathG.append("use")
    .attr("class", "stroke")
    .attr("xlink:href", "#sphere");

pathG.append("use")
    .attr("class", "fill")
    .attr("xlink:href", "#sphere");

pathG.append("path")
    .datum(graticule)
    .attr("class", "graticule")
    .attr("d", path);

 var b = [[0.0, 90.0], [-6.810240673285597, 36.34242568991604],
 [81.44002338719618, -13.850135812636097],
 [-177.68451885568115, 36.341859091438906],
 [27.26730734719346, -6.774834613467547],
 [42.476556297299574, -59.15359286114776],
 [121.83037315324542, 22.385717036736935],
 [-157.36850108499092, -66.32377379205397],
 [61.34482371960207, 36.34217863731335],
 [-36.323925548209154, -36.66990981007845],
 [-99.07557026330151, -26.11304222588396],
 [149.77345948578537, -23.89118866091235],
 [-115.55745595484477, 25.1312238390871],
 [-60.26117641376935, 12.024115772208575],
 [-154.59935888958518, -12.698612535085473]]
;

 var data =
[[[0.0, 90.0], [-6.810240673285597, 36.34242568991604]],
 [[0.0, 90.0], [-177.68451885568115, 36.341859091438906]],
 [[0.0, 90.0], [61.34482371960207, 36.34217863731335]],
 [[-6.810240673285597, 36.34242568991604],
  [27.26730734719346, -6.774834613467547]],
 [[-6.810240673285597, 36.34242568991604],
  [61.34482371960207, 36.34217863731335]],
 [[-6.810240673285597, 36.34242568991604],
  [-60.26117641376935, 12.024115772208575]],
 [[81.44002338719618, -13.850135812636097],
  [27.26730734719346, -6.774834613467547]],
 [[81.44002338719618, -13.850135812636097],
  [42.476556297299574, -59.15359286114776]],
 [[81.44002338719618, -13.850135812636097],
  [121.83037315324542, 22.385717036736935]],
 [[81.44002338719618, -13.850135812636097],
  [61.34482371960207, 36.34217863731335]],
 [[-177.68451885568115, 36.341859091438906],
  [121.83037315324542, 22.385717036736935]],
 [[-177.68451885568115, 36.341859091438906],
  [-115.55745595484477, 25.1312238390871]],
 [[-177.68451885568115, 36.341859091438906],
  [-154.59935888958518, -12.698612535085473]],
 [[27.26730734719346, -6.774834613467547],
  [42.476556297299574, -59.15359286114776]],
 [[27.26730734719346, -6.774834613467547],
  [61.34482371960207, 36.34217863731335]],
 [[42.476556297299574, -59.15359286114776],
  [-157.36850108499092, -66.32377379205397]],
 [[42.476556297299574, -59.15359286114776],
  [-36.323925548209154, -36.66990981007845]],
 [[121.83037315324542, 22.385717036736935],
  [61.34482371960207, 36.34217863731335]],
 [[121.83037315324542, 22.385717036736935],
  [149.77345948578537, -23.89118866091235]],
 [[-157.36850108499092, -66.32377379205397],
  [-99.07557026330151, -26.11304222588396]],
 [[-157.36850108499092, -66.32377379205397],
  [149.77345948578537, -23.89118866091235]],
 [[-157.36850108499092, -66.32377379205397],
  [-154.59935888958518, -12.698612535085473]],
 [[-36.323925548209154, -36.66990981007845],
  [-99.07557026330151, -26.11304222588396]],
 [[-36.323925548209154, -36.66990981007845],
  [-60.26117641376935, 12.024115772208575]],
 [[-99.07557026330151, -26.11304222588396],
  [-115.55745595484477, 25.1312238390871]],
 [[-99.07557026330151, -26.11304222588396],
  [-60.26117641376935, 12.024115772208575]],
 [[-99.07557026330151, -26.11304222588396],
  [-154.59935888958518, -12.698612535085473]],
 [[149.77345948578537, -23.89118866091235],
  [-154.59935888958518, -12.698612535085473]],
 [[-115.55745595484477, 25.1312238390871],
  [-60.26117641376935, 12.024115772208575]],
 [[-115.55745595484477, 25.1312238390871],
  [-154.59935888958518, -12.698612535085473]]]
;


  pathG.selectAll("circle")
    .data(b).enter()
    .append("circle")
    .attr("cx", function (d) { return projection(d)[0]; })
    .attr("cy", function (d) { return projection(d)[1]; })
    .attr("r", "8px")
    .attr("fill", "blue");


var links = [];
data.forEach(function(data){
  links.push({
        type: "LineString",
            coordinates: data
    });
});

var pathArcs = pathG.selectAll(".arc")
            .data(links);

    //enter
    pathArcs.enter()
        .append("path").attr({
            'class': 'arc'
        }).style({ 
            fill: 'none',
        });

    //update
    pathArcs.attr({
            d: path
        })
        .style({
            stroke: '#0000ff',
            'stroke-width': '2px'
        });

  function dragstarted(d) 
  {
    //stopPropagation prevents dragging to "bubble up" which triggers same event for all elements below this object
    d3.event.sourceEvent.stopPropagation();
    d3.select(this).classed("dragging", true);
  }

  function dragged() {
    projection.rotate([d3.event.x, -d3.event.y]);
    pathG.selectAll("path").attr("d", path);
    pathG.selectAll("circle")
      .attr("cx", function (d) { return projection(d)[0]; })
      .attr("cy", function (d) { return projection(d)[1]; })
  }

  function dragended(d) 
  {
    d3.select(this).classed("dragging", false);
  }

d3.select(self.frameElement).style("height", height + "px");